# -*- coding: utf-8 -*-
import re
import os
import subprocess

from setuptools import setup

description = 'Python API for the Nitrate test case management system'
long_description = """python-nitrate is a Python interface to the Nitrate
test case management system. The package consists of a high-level Python
module (provides natural object interface), a low-level driver (allows
to directly access Nitrate's XMLRPC API) and a command  line interpreter
(useful for fast debugging and experimenting)."""

# Fetch version from git tags, and write to version.py.
# Also, when git is not available (PyPi package), use stored version.py.
version_py = os.path.join(os.path.dirname(__file__), 'source/version.py')

try:
    version_git = subprocess.check_output(['git', 'describe', '--tags'])
    version_git = version_git.rstrip()
    # remove commit id
    version_git = re.search('[0-9]+.[0-9]+(-[0-9]+)?', version_git).group(0)
# without git get version from version.py file
except:
    with open(version_py, 'r') as fh:
        version_git = open(version_py).read().strip().split('=')[-1]
        version_git = version_git.replace('\'', '')

version_msg = '# Do not edit this file, versioning is governed by git tags'
with open(version_py, 'w') as fh:
    fh.write('{0}\n__version__ = \'{1}\''.format(version_msg, version_git))

setup(name='nitrate',
      version='{0}'.format(version_git),
      packages=['nitrate'],
      package_dir={'nitrate': 'source'},
      scripts=['source/nitrate'],
      description=description,
      long_description=long_description,
      author='Petr Šplíchal',
      author_email='psplicha@redhat.com',
      url='https://psss.fedorapeople.org/python-nitrate/',
      platforms='UNIX',
      classifiers=[
        'Development Status :: 5 - Production/Stable',
        'Environment :: Console',
        'Intended Audience :: Developers',
        'Intended Audience :: System Administrators',
        'License :: OSI Approved :: GNU Lesser General Public License v2' +
        ' or later (LGPLv2+)',
        'Operating System :: POSIX',
        'Programming Language :: Python',
        'Programming Language :: Python :: 2.6',
        'Programming Language :: Python :: 2.7',
        'Topic :: Software Development',
        'Topic :: Software Development :: Libraries :: Python Modules',
        'Topic :: Software Development :: Quality Assurance',
        'Topic :: Software Development :: Testing',
      ])
